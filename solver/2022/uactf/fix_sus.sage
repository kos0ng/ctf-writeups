def func1(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 125 * a13 + 205 * a15 + 126 * a2 + 30 * a6 + 166 * a9 + 103 * a18 + 117 * a17 + 58 * a7 + 22 * a4 + 181 * a10 + 14 * a11 + (a1 << 6) + 223 * a5 + 103 * a3 + 48 * a8 + (a12 << 7) + 175 * a16

def func2(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 30 * a14 + 172 * a4 + 213 * a7 + 204 * a9 + 130 * a15 + 152 * a16 + 151 * a1 + 42 * a2 + 227 * a3 + 176 * a18 + 161 * a13 + 106 * a8 + 47 * a5 + 62 * a6 + 202 * a17 + 232 * a11 + 131 * a12 + 95 * a10

def func3(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 246 * a15 + 77 * a13 + 44 * a1 + 148 * a16 + 145 * a9 + 58 * a4 + 25 * a5 + 52 * a3 + 121 * a10 + 164 * a11 + 216 * a18 + 76 * a8 + 14 * a17 + 164 * a2 + 21 * a14 + 199 * a7 + 238 * a12 + 111 * a6

def func4(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 47 * a1 + 212 * a18 + 194 * a16 + 20 * a3 + 108 * a10 + 227 * a17 + 46 * a15 + 185 * a2 + 35 * a8 + 131 * a7 + 220 * a4 + 152 * a9 + 39 * a11 + 91 * a5 + 150 * a12 + 80 * a13 + 93 * a6 + 125 * a14

def func5(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 134 * a15 + 187 * a3 + 53 * a11 + 226 * a4 + 143 * a12 + 19 * a2 + 33 * a13 + 208 * a7 + 250 * a18 + 53 * a6 + 189 * a17 + 214 * a9 + 141 * a5 + 235 * a10 + 233 * a8 + 11 * a16 + 208 * a1

def func6(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 168 * a7 + 225 * a12 + 77 * a2 + 238 * a15 + 188 * a13 + 131 * a11 + 249 * a14 + 144 * a5 + 47 * a18 + 110 * a4 + 181 * a9 + 206 * a10 + 48 * a6 + 49 * a17 + 166 * a16 + 85 * a3 + 231 * a1 + 46 * a8

def func7(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 233 * a4 + 14 * a17 + 138 * a7 + 221 * a15 + 225 * a13 + 240 * a14 + 54 * a5 + 192 * a16 + 230 * a9 + 196 * a8 + 140 * a12 + (a6 << 6) + 83 * a2 + 91 * a11 + 116 * a3 + 243 * a10 + 20 * a18 + 20 * a1

def func8(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 52 * a9 + 33 * a11 + 94 * a18 + 37 * a15 + 48 * a13 + 138 * a1 + 68 * a4 + 221 * a17 + 84 * a12 + 203 * a14 + 197 * a8 + 145 * a16 + 221 * a10 + 28 * a6 + 152 * a3 + 186 * a7 + 110 * a5 + 14 * a2

def func9(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 226 * a14 + 137 * a2 + 38 * a13 + 28 * a17 + 119 * a15 + 3 * a7 + 209 * a5 + 196 * a16 + 62 * a11 + 148 * a4 + 7 * a3 + 59 * a8 + 30 * a18 + 51 * a6 + 124 * a12 + 250 * a1 + 57 * a9 + 37 * a10

def func10(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 85 * a14 + 214 * a15 + 210 * a6 + 151 * a2 + 99 * a12 + 248 * a18 + 209 * a10 + 22 * a7 + 54 * a17 + 197 * a16 + 223 * a8 + 46 * a1 + 162 * a4 + 85 * a3 + 15 * a11 + 57 * a13 + 152 * a5 + 11 * a9

def func11(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 126 * a7 + 234 * a11 + 226 * a6 + 235 * a17 + 79 * a18 + 226 * a13 + 241 * a3 + 26 * a8 + 107 * a5 + (a4 << 6) + 138 * a10 + 29 * a2 + 77 * a9 + 196 * a16 + 230 * a14 + 12 * a12 + 105 * a15 + 65 * a1;

def func12(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 226 * a1 + 95 * a12 + 25 * a4 + 8 * a17 + 38 * a16 + 163 * a9 + 133 * a2 + 183 * a13 + 43 * a18 + 6 * a10 + 243 * a6 + 164 * a15 + 173 * a14 + 113 * a7 + 4 * a5 + 184 * a11 + 93 * a3 + 110 * a8

def func13(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 141 * a6 + 182 * a17 + 86 * a9 + 21 * a8 + 156 * a7 + 41 * a18 + 217 * a13 + 195 * a2 + 224 * a5 + 141 * a10 + 168 * a11 + 103 * a1 + 183 * a14 + 58 * a15 + 73 * a3 + 190 * a16 + 208 * a4 + 169 * a12

def func14(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 114 * a13 + 42 * a6 + 178 * a18 + 44 * a2 + 196 * a5 + 90 * a17 + 134 * a11 + 194 * a4 + 245 * a15 + 3 * a12 + 249 * a7 + 169 * a14 + 149 * a3 + 71 * a9 + 166 * a1 + 89 * a16 + 134 * a8 + 40 * a10

def func15(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 176 * a14 + 209 * a18 + 8 * a5 + 89 * a10 + 62 * a8 + 126 * a11 + 130 * a17 + 15 * a4 + 200 * a6 + 229 * a12 + 134 * a9 + 188 * a2 + 185 * a16 + 216 * a15 + 47 * a7 + 144 * a3 + 53 * a1 + 108 * a13

def func16(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 150 * a6 + 13 * a3 + 204 * a2 + 51 * a16 + 213 * a9 + 188 * a5 + 241 * a1 + 56 * a13 + 83 * a10 + 34 * a4 + 189 * a8 + 20 * a7 + 158 * a15 + 119 * a17 + 200 * a12 + 208 * a18 + 104 * a11 + 141 * a14

def func17(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 55 * a6 + 142 * a9 + 158 * a15 + 102 * a7 + 13 * a8 + 133 * a2 + 57 * a14 + 178 * a1 + 171 * a16 + 31 * a11 + a12 + 59 * a5 + 68 * a13 + 187 * a18 + 118 * a10 + 95 * a3 + 209 * a4 + 154 * a17

def func18(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18):
	return 193 * a13 + 24 * a2 + 44 * a6 + 174 * a10 + 236 * a3 + 9 * a1 + 112 * a12 + 7 * a11 + 226 * a4 + 48 * a18 + 110 * a8 + 245 * a9 + (a5 << 7) + 247 * a14 + 51 * a7 + 210 * a15 + 38 * a16 + 103 * a17

v23 = [func1,func2,func3,func4,func5,func6,func7,func8,func9,func10,func11,func12,func13,func14,func15,func16,func17,func18]
arr = ['[11](v12, v15, v21, v6, v5, v8, v9, v14, v11, v13, v22, v7, v20, v17, v18, v10, v19, v16)',
'[0](v5, v12, v20, v9, v10, v17, v8, v16, v19, v18, v7, v11, v21, v6, v14, v13, v15, v22)',
'[9](v14, v21, v5, v15, v18, v13, v9, v16, v19, v11, v7, v17, v22, v8, v10, v12, v20, v6)',
'[14](v20, v13, v6, v15, v11, v10, v9, v5, v7, v22, v14, v8, v17, v19, v21, v16, v12, v18)',
'[10](v7, v12, v17, v5, v20, v16, v19, v22, v18, v6, v15, v13, v21, v14, v10, v9, v11, v8)',
'[13](v22, v6, v13, v20, v10, v7, v5, v17, v18, v12, v11, v21, v19, v14, v9, v15, v16, v8)',
'[1](v10, v22, v17, v12, v20, v11, v8, v21, v18, v6, v9, v13, v15, v7, v16, v5, v19, v14)',
'[8](v10, v16, v6, v8, v18, v20, v7, v12, v22, v9, v15, v5, v17, v19, v14, v21, v11, v13)',
'[17](v17, v11, v12, v13, v21, v9, v20, v7, v16, v22, v10, v5, v14, v8, v19, v18, v15, v6)',
'[7](v10, v8, v18, v7, v14, v13, v11, v21, v12, v20, v9, v6, v15, v17, v5, v19, v22, v16)',
'[3](v15, v10, v13, v14, v21, v16, v6, v20, v22, v7, v11, v18, v9, v17, v19, v12, v5, v8)',
'[2](v12, v15, v10, v8, v9, v21, v13, v14, v16, v11, v6, v19, v22, v5, v7, v17, v18, v20)',
'[12](v20, v15, v19, v22, v11, v8, v21, v16, v9, v14, v5, v7, v6, v12, v10, v18, v17, v13)',
'[6](v14, v10, v19, v9, v17, v18, v11, v21, v22, v20, v13, v12, v16, v7, v6, v8, v15, v5)',
'[15](v16, v17, v7, v5, v6, v11, v13, v9, v15, v18, v20, v10, v8, v22, v19, v14, v12, v21)',
'[5](v22, v8, v5, v21, v6, v13, v20, v14, v17, v12, v7, v10, v18, v19, v15, v9, v11, v16)',
'[16](v22, v14, v7, v16, v6, v8, v12, v17, v9, v11, v5, v21, v20, v13, v10, v19, v15, v18)',
'[4](v16, v17, v18, v10, v19, v5, v8, v9, v22, v20, v15, v12, v6, v14, v13, v7, v11, v21)']

dictt = {}
for _,i in enumerate(arr):
	tmp = i.split('](')
	ind = tmp[1].split(')')[0].split(',')
	for x,j in enumerate(ind):
		tmp3 = [0]*len(ind)
		tmp3[x] = 1
		tmp2 = j.strip()
		if(tmp2 not in dictt):
			a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18 = tmp3
			dictt[tmp2] = [v23[_](a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18)]
		else:
			a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18 = tmp3
			dictt[tmp2].append(v23[_](a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18))

sort_var = ['v{}'.format(i) for i in range(5,23)]

final_arr = []

for i in range(len(v23)):
	final_tmp = []
	for j in sort_var:
		final_tmp.append(dictt[j][i])
	final_arr.append(final_tmp)

output = [146,233,212 ,35,179 ,244 ,85,35,201 ,48,113 ,83,81,211 ,1,96,148 ,189]

matrix = final_arr

R = IntegerModRing(251)
M = Matrix(R, matrix)
b = vector(R, output)

print(''.join(chr(x) for x in M.solve_right(b))[::-1])