import base64
from string import printable,ascii_letters

# def shiftleft(b):
# 	tmp=b[0]
# 	b[0]=b[1]
# 	b[1]=b[2]
# 	b[2]=tmp
# 	return b
# def shiftright(b):
# 	tmp=b[2]
# 	b[2]=b[1]
# 	b[1]=b[0]
# 	b[0]=tmp
# 	return b
# a=[[0, 0, 1],[3, 8, 1],[17, 2, 5],[3, 0, 11],[0, 11, 4],[11, 5, 0],[6, 1, 13],[14, 31, 7],[18, 8, 0],[9, 0, 21],[2, 29, 10],[37, 11, 7],[12, 0, 28],[4, 23, 13],[11, 14, 0],[15, 0, 28],[0, 1, 16],[3, 17, 1],[18, 0, 2],[4, 23, 19],[11, 20, 0],[21, 4, 12],[4, 23, 22],[36, 23, 17],[24, 2, 9],[1, 3, 25],[12, 26, 4],[27, 7, 37],[0, 32, 28],[0, 29, 0],[30, 4, 23],[3, 24, 31],[10, 32, 3],[33, 2, 9],[17, 36, 34],[18, 35, 0],[36, 10, 7],[1, 6, 37]]
list_b64="""aGdhMjIyfFRjeGwxcmAycmg0YmAyd2BbQTR3MXFpYEVwQVtjJX4=
aWhiMzMzfVVkeW0yc3szc2k1Y3szeHtcQjV4MnJqe0ZxQlxkJiA=
amljNDQ0flZlem4zdHw0dGo2ZHw0eXxdQzZ5M3NrfEdyQ11lJwk=
a2pkNTU1IFdmQW80dX01dWs3ZX01en1eRDd6NHRsfUhzRF5mKAo=
bGtlNjY2CVhnQnA1dn42dmw4Zn42QX5fRThBNXVtfkl0RV9nKQ0=
bWxmNzc3ClloQ3E2dyA3d205ZyA3QiBgRjlCNnZuIEp1RmBoKgs=
bm1nODg4DVppRHI3eAk4eG5haAk4Qwl7R2FDN3dvCUt2R3tpKww=
b25oOTk5CyFqRXM4eQo5eW9iaQo5RAp8SGJEOHhwCkx3SHxqLDA=
cG9pYWFhDCJrRnQ5eg1henBjag1hRQ19SWNFOXlxDU14SX1rLTE=
cXBqYmJiMCNsR3VhQQtiQXFkawtiRgt+SmRGYXpyC055Sn5sLjI=
cnFrY2NjMSRtSHZiQgxjQnJlbAxjRwwgS2VHYkFzDE96SyBtLzM=
c3JsZGRkMiVuSXdjQzBkQ3NmbTBkSDAJTGZIY0J0MFBBTAluOjQ=
dHNtZWVlMyZvSnhkRDFlRHRnbjFlSTEKTWdJZEN1MVFCTQpvOzU=
dXRuZmZmNCdwS3llRTJmRXVobzJmSjINTmhKZUR2MlJDTg1wPDY=
dnVvZ2dnNShxTHpmRjNnRnZpcDNnSzMLT2lLZkV3M1NETwtxPTc=
d3ZwaGhoNilyTUFnRzRoR3dqcTRoTDQMUGpMZ0Z4NFRFUAxyPjg=
eHdxaWlpNypzTkJoSDVpSHhrcjVpTTUwUWtNaEd5NVVGUTBzPzk=
eXhyampqOCt0T0NpSTZqSXlsczZqTjYxUmxOaUh6NlZHUjF0QGE=
enlza2trOSx1UERqSjdrSnptdDdrTzcyU21PaklBN1dIUzJ1W2I=
QXp0bGxsYS12UUVrSzhsS0FudThsUDgzVG5Qa0pCOFhJVDN2XGM=
QkF1bW1tYi53UkZsTDltTEJvdjltUTk0VW9RbEtDOVlKVTR3XWQ=
Q0J2bm5uYy94U0dtTWFuTUNwd2FuUmE1VnBSbUxEYVpLVjV4XmU=
REN3b29vZDp5VEhuTmJvTkRxeGJvU2I2V3FTbk1FYiFMVzZ5X2Y=
RUR4cHBwZTt6VUlvT2NwT0VyeWNwVGM3WHJUb05GYyJNWDd6YGc=
RkV5cXFxZjxBVkpwUGRxUEZzemRxVWQ4WXNVcE9HZCNOWThBe2g=
R0Z6cnJyZz1CV0txUWVyUUd0QWVyVmU5WnRWcVBIZSRPWjlCfGk=
SEdBc3NzaD5DWExyUmZzUkh1QmZzV2ZhIXVXclFJZiVQIWFDfWo=
SUhCdHR0aT9EWU1zU2d0U0l2Q2d0WGdiInZYc1JKZyZRImJEfms=
SklDdXV1akBFWk50VGh1VEp3RGh1WWhjI3dZdFNLaCdSI2NFIGw=
S0pEdnZ2a1tGIU91VWl2VUt4RWl2WmlkJHhadVRMaShTJGRGCW0=
TEtFd3d3bFxHIlB2Vmp3Vkx5Rmp3IWplJXkhdlVNailUJWVHCm4=
TUxGeHh4bV1II1F3V2t4V016R2t4ImtmJnoid1ZOaypVJmZIDW8=
Tk1HeXl5bl5JJFJ4WGx5WE5BSGx5I2xnJ0EjeFdPbCtWJ2dJC3A=
T05Ienp6b19KJVN5WW16WU9CSW16JG1oKEIkeVhQbSxXKGhKDHE=
UE9JQUFBcGBLJlR6Wm5BWlBDSm5BJW5pKUMlellRbi1YKWlLMHI=
UVBKQkJCcXtMJ1VBIW9CIVFES29CJm9qKkQmQVpSby5ZKmpMMXM=
UlFLQ0NDcnxNKFZCInBDIlJFTHBDJ3BrK0UnQiFTcC9aK2tNMnQ=
U1JMREREc31OKVdDI3FEI1NGTXFEKHFsLEYoQyJUcTohLGxOM3U=
VFNNRUVFdH5PKlhEJHJFJFRHTnJFKXJtLUcpRCNVcjsiLW1PNHY=
VVRORkZGdSBQK1lFJXNGJVVIT3NGKnNuLkgqRSRWczwjLm5QNXc=
VlVPR0dHdglRLFpGJnRHJlZJUHRHK3RvL0krRiVXdD0kL29RNng=
V1ZQSEhIdwpSLSFHJ3VIJ1dKUXVILHVwOkosRyZYdT4lOnBSN3k=
WFdRSUlJeA1TLiJIKHZJKFhLUnZJLXZxO0stSCdZdj8mO3FTOHo=
WVhSSkpKeQtULyNJKXdKKVlMU3dKLndyPEwuSShad0AnPHJUOUE=
WllTS0tLegxVOiRKKnhLKlpNVHhLL3hzPU0vSikheFsoPXNVYUI=
IVpUTExMQTBWOyVLK3lMKyFOVXlMOnl0Pk46SyoieVwpPnRWYkM=
IiFVTU1NQjFXPCZMLHpNLCJPVnpNO3p1P087TCsjel0qP3VXY0Q=
IyJWTk5OQzJYPSdNLUFOLSNQV0FOPEF2QFA8TSwkQV4rQHZYZEU=
JCNXT09PRDNZPihOLkJPLiRRWEJPPUJ3W1E9Ti0lQl8sW3dZZUY=
JSRYUFBQRTRaPylPL0NQLyVSWUNQPkN4XFI+Ty4mQ2AtXHhaZkc=
JiVZUVFRRjUhQCpQOkRROiZTWkRRP0R5XVM/UC8nRHsuXXkhZ0g=
JyZaUlJSRzYiWytRO0VSOydUIUVSQEV6XlRAUTooRXwvXnoiaEk=
KCchU1NTSDcjXCxSPEZTPChVIkZTW0ZBX1VbUjspRn06X0EjaUo=
KSgiVFRUSTgkXS1TPUdUPSlWI0dUXEdCYFZcUzwqR347YEIkaks=
KikjVVVVSjklXi5UPkhVPipXJEhVXUhDe1ddVD0rSCA8e0Mla0w=
KyokVlZWS2EmXy9VP0lWPytYJUlWXklEfFheVT4sSQk9fEQmbE0=
LCslV1dXTGInYDpWQEpXQCxZJkpXX0pFfVlfVj8tSgo+fUUnbU4=
LSwmWFhYTWMoeztXW0tYWy1aJ0tYYEtGflpgV0AuSw0/fkYobk8=
Li0nWVlZTmQpfDxYXExZXC4hKExZe0xHICF7WFsvTAtAIEcpb1A=
Ly4oWlpaT2UqfT1ZXU1aXS8iKU1afE1ICSJ8WVw6TQxbCUgqcFE=
Oi8pISEhUGYrfj5aXk4hXjojKk4hfU5JCiN9Wl07TjBcCkkrcVI=
OzoqIiIiUWcsID8hX08iXzskK08ifk9KDSR+IV48TzFdDUosclM=
PDsrIyMjUmgtCUAiYFAjYDwlLFAjIFBLCyUgIl89UDJeC0stc1Q=
PTwsJCQkU2kuClsje1Ekez0mLVEkCVFMDCYJI2A+UTNfDEwudFU=
Pj0tJSUlVGovDVwkfFIlfD4nLlIlClJNMCcKJHs/UjRgME0vdVY=
Pz4uJiYmVWs6C10lfVMmfT8oL1MmDVNOMSgNJXxAUzV7MU46dlc=
QD8vJycnVmw7DF4mflQnfkApOlQnC1RPMikLJn1bVDZ8Mk87d1g=
W0A6KCgoV208MF8nIFUoIFsqO1UoDFVQMyoMJ35cVTd9M1A8eFk=
XFs7KSkpWG49MWAoCVYpCVwrPFYpMFZRNCswKCBdVjh+NFE9eVo=
XVw8KioqWW8+MnspClcqCl0sPVcqMVdSNSwxKQleVzkgNVI+eiE=
Xl09KysrWnA/M3wqDVgrDV4tPlgrMlhTNi0yKgpfWGEJNlM/QSI=
X14+LCwsIXFANH0rC1ksC18uP1ksM1lUNy4zKw1gWWIKN1RAQiM=
YF8/LS0tInJbNX4sDFotDGAvQFotNFpVOC80LAt7WmMNOFVbQyQ=
e2BALi4uI3NcNiAtMCEuMHs6WyEuNSFWOTo1LQx8IWQLOVZcRCU=
fHtbLy8vJHRdNwkuMSIvMXw7XCIvNiJXYTs2LjB9ImUMYVddRSY=
fXxcOjo6JXVeOAovMiM6Mn08XSM6NyNYYjw3LzF+I2YwYlheRic=
fn1dOzs7JnZfOQ06MyQ7M349XiQ7OCRZYz04OjIgJGcxY1lfRyg=
IH5ePDw8J3dgYQs7NCU8NCA+XyU8OSVaZD45OzMJJWgyZFpgSCk=
CSBfPT09KHh7Ygw8NSY9NQk/YCY9YSYhZT9hPDQKJmkzZSF7SSo=
CglgPj4+KXl8YzA9Nic+NgpAeyc+YiciZkBiPTUNJ2o0ZiJ8Sis=
DQp7Pz8/Knp9ZDE+Nyg/Nw1bfCg/YygjZ1tjPjYLKGs1ZyN9Syw=
Cw18QEBAK0F+ZTI/OClAOAtcfSlAZCkkaFxkPzcMKWw2aCR+TC0=
DAt9W1tbLEIgZjNAOSpbOQxdfipbZSolaV1lQDgwKm03aSUgTS4=
MAx+XFxcLUMJZzRbYStcYTBeICtcZismal5mWzkxK244aiYJTi8=
MTAgXV1dLkQKaDVcYixdYjFfCSxdZywna19nXGEyLG85aycKTzo=
MjEJXl5eL0UNaTZdYy1eYzJgCi1eaC0obGBoXWIzLXBhbCgNUDs=
MzIKX19fOkYLajdeZC5fZDN7DS5faS4pbXtpXmM0LnFibSkLUTw=
NDMNYGBgO0cMazhfZS9gZTR8Cy9gai8qbnxqX2Q1L3JjbioMUj0=
NTQLe3t7PEgwbDlgZjp7ZjV9DDp7azorb31rYGU2OnNkbyswUz4=
NjUMfHx8PUkxbWF7Zzt8ZzZ+MDt8bDsscH5se2Y3O3RlcCwxVD8=
NzYwfX19PkoybmJ8aDx9aDcgMTx9bTwtcSBtfGc4PHVmcS0yVUA=
ODcxfn5+P0szb2N9aT1+aTgJMj1+bj0ucglufWg5PXZnci4zVls=
OTgyICAgQEw0cGR+aj4gajkKMz4gbz4vcwpvfmlhPndocy80V1w=
YTkzCQkJW001cWUgaz8Ja2ENND8JcD86dA1wIGpiP3hpdDo1WF0=
YmE0CgoKXE42cmYJbEAKbGILNUAKcUA7dQtxCWtjQHlqdTs2WV4=
Y2I1DQ0NXU83c2cKbVsNbWMMNlsNcls8dgxyCmxkW3prdjw3Wl8=
ZGM2CwsLXlA4dGgNblwLbmQwN1wLc1w9dzBzDW1lXEFsdz04IWA=
ZWQ3DAwMX1E5dWkLb10Mb2UxOF0MdF0+eDF0C25mXUJteD45Ins=
ZmU4MDAwYFJhdmoMcF4wcGYyOV4wdV4/eTJ1DG9nXkNueT9hI3w=""".split("\n")
# real_arr=[]
# flag=['?' for i in range(100)]
# for i in range(len(a)):
# 	if(i%3==0):
# 		real_arr.append(a[i])
# 	if(i%3==1):
# 		real_arr.append(a[i])
# 	if(i%3==2):
# 		real_arr.append(a[i])
# print real_arr

# for i in real_arr:
# 	flag[i[0]]=decode_arr[i[1]][i[2]]
# print ''.join(flag)

decode_arr=[]
for j in range(1,len(printable)):
	tmp=base64.b64decode(list_b64[j-1])
	tmp2=""
	for i in tmp:
		tmp2+=printable[(printable.find(i)-j)%len(printable)]
	if(j!=1):
		assert(tmp2==decode_arr[j-2])
	decode_arr.append(tmp2)
flag=""
for i in decode_arr[0]:
	if i=='b':
		flag+="y"
	elif i in ascii_letters:
		flag+=chr(ord(i)-3)
	else:
		flag+=i
print flag